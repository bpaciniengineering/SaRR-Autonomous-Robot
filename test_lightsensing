
//*************************************************************************
//*************************************************************************

//                Autonomous Light Tracking Code
//                Lena Dubitsky and Jesus Serrano Cendejas

//readLightSensors()
//updateWheels()
//forwardRobot()
//spinRobot()
//stopRobot()
//fixPoint()
//killRobot()

//*************************************************************************
//*************************************************************************

//*************************************************************************
//  Global Variables and Constants
//*************************************************************************
// for motor values: <1500 is forward, >1500 is reverse
#include <Servo.h>

//RC controller
int Ch1, Ch2, Ch3, Ch4, Ch5, Ch6;

//variables to hold data
//these hold values related by the sensors
int LeftSensor;
int RightSensor;
int dist;
int direc;
int point;
int workingDirecThreshold;
int workingDistThreshold;

//these hold the "speeds" of the wheels
int LWheel;
int RWheel;

//has the first spin happened?
int firstSpin = 0;


//hard constants for when to stop initial spin
const int direcThreshold = 50;
const int distThreshold = 1650;
const int fix = 1425;

Servo L_Servo;  // Servo DC Motor Driver (Designed for RC cars)Servo L_Servo;  // Servo DC Motor Driver (Designed for RC cars)
Servo R_Servo;  // Servo DC Motor Driver (Designed for RC cars)Servo R_Servo;  // Servo DC Motor Driver (Designed for RC cars)

//*************************************************************************
//  Setup
//*************************************************************************
void setup() {
  // Set the pins that the transmitter will be connected to all to input
  pinMode(12, INPUT); //I connected this to Chan1 of the Receiver
  pinMode(11, INPUT); //I connected this to Chan2 of the Receiver
  pinMode(10, INPUT); //I connected this to Chan3 of the Receiver
  pinMode(9, INPUT); //I connected this to Chan4 of the Receiver
  pinMode(8, INPUT); //I connected this to Chan5 of the Receiver
  pinMode(7, INPUT); //I connected this to Chan6 of the Receiver
  pinMode(13, OUTPUT); //Onboard LED to output for diagnostics

  pinMode(A9, INPUT); // right light sensor should be connected to pin A9, it needs to be reading inputs
  pinMode(A8, INPUT); // left sensor
  R_Servo.attach(2); //Pin 2, right wheel
  L_Servo.attach(3); //Pin 3, left wheel

  Serial.begin(9600); // create port
  while (!Serial);  // wait until serial window is opened
}

//*************************************************************************
//  Main Loop
//*************************************************************************
void loop() {

  //this spin will only get executed the first time around.
  if (firstSpin == 0) {
    spinRobot();
    firstSpin = 1;
  }
  
  Serial.println("Entering loop()");

  //Robot has performed initial spin, and it's pointing at the light
  readLightSensors();

  //Robot is pointing at light
  while (dist < workingDistThreshold && abs(direc) < workingDirecThreshold) {
    Serial.println("I'm pointing at light!");
    //stopRobot();
    forwardRobot();
    readLightSensors();
  }

  //Robot is NOT pointing at light
  while (dist > workingDistThreshold || abs(direc) > workingDirecThreshold) {
    fixPoint();
    readLightSensors();
  }

  //When we're 1ft away from light, stop.
  //Some logic here...
  //killRobot();
}

//*************************************************************************
//  readLightSensors
//*************************************************************************
void readLightSensors() {
  //read and print values from both light sensors

  LeftSensor = analogRead(A8);
  RightSensor = analogRead(A9);
  dist = LeftSensor + RightSensor;  // associated with distance to light
  direc = LeftSensor - RightSensor; // associated with direction to light

  //Serial.println("L = " + (String)LeftSensor + " | " + (String)RightSensor + " = R");
}

//*************************************************************************
//  updateWheels
//*************************************************************************
void updateWheels() {

  //set limits
  if (RWheel > 2000)
    RWheel = 2000;
  if (RWheel < 1000)
    RWheel = 1000;

  if (LWheel > 2000)
    LWheel = 2000;
  if (LWheel < 1000)
    LWheel = 1000;

  //update the wheels
  R_Servo.writeMicroseconds(RWheel); // 1000-2000, 1500 should be stop
  L_Servo.writeMicroseconds(LWheel); // 1000-2000, 1500 should be stop
}

//*************************************************************************
//  spinRobot
//*************************************************************************
void spinRobot() {

  Serial.println("Performing spinRobot()");

  //start from a stopped position
  stopRobot();

  // for initial spin
  readLightSensors();

  //if either condition is bad, spin
  while (abs(direc) > direcThreshold || dist > distThreshold) {
    Serial.println("spinning");
    //try reading again
    readLightSensors();

    RWheel = 1470; // right wheel going forwards
    LWheel = 1545; // left wheel going backwards
    updateWheels();
  }

  //success, robot is looking at light
  Serial.println("Success! I'm pointing at light! Stopping.");
  workingDirecThreshold = direc;
  workingDistThreshold = dist;
  Serial.println("workingDirecThreshold =  " + (String)workingDirecThreshold);
  Serial.println("workingDistThreshold =  " + (String)workingDistThreshold);
  Serial.println("point =  " + (String)direc);

  stopRobot();
  delay(5000);
}

//*************************************************************************
//  stopRobot
//*************************************************************************
void stopRobot() {
  //set wheels to zero
  RWheel = 1500;
  LWheel = 1500;
  updateWheels();
}

//*************************************************************************
//  forwardRobot
//*************************************************************************
void forwardRobot() {
  //roll forward slowly with even speeds
  RWheel = 1450;
  LWheel = 1450;
  updateWheels();
}

//*************************************************************************
//  fixPoint
//************************************************************************
void fixPoint() {
  Serial.println("");
  Serial.println("Entering fixPoint()");

  //check to see where we are pointing: + = R, - = L
  readLightSensors();
  int point = direc;
  Serial.println("Point = " + (String)point);

  //if robot is pointing right, speed up right wheel
  if (point < 0) {
    Serial.println("I'm pointing right! Speeding up RWheel.");
    RWheel = fix;
  }

  //if robot is pointing left, speed up left wheel
  if (point > 0) {
    Serial.println("I'm pointing left! Speeding up LWheel.");
    LWheel = fix;
  }

  Serial.println("Updating: LWheel = " + (String)LWheel + " | " + (String)RWheel + " = RWheel");
  updateWheels();
}

//*************************************************************************
//  killRobot
//*************************************************************************
void killRobot() {
  //set wheels to zero
  RWheel = 1500;
  LWheel = 1500;
  updateWheels();

  //pause forever
  while (true);
}
