// Autonomous Light Tracking Code
// Lena Dubitsky and Jesus Serrano Cendejas

//*************************************************************************
//    Global Variables and Constants
//*************************************************************************
// for motor values: <1500 is forward, >1500 is reverse
#include <Servo.h>

int LeftSensor;
int RightSensor;
int LWheel;
int RWheel;
int dist;
int direc;
int dir;
Servo L_Servo;  // Servo DC Motor Driver (Designed for RC cars)Servo L_Servo;  // Servo DC Motor Driver (Designed for RC cars)
Servo R_Servo;  // Servo DC Motor Driver (Designed for RC cars)Servo R_Servo;  // Servo DC Motor Driver (Designed for RC cars)

//*************************************************************************
//    Setup
//*************************************************************************
void setup() {
  pinMode(A9, INPUT); // light sensor should be connected to pin A9, it needs to be reading inputs
  pinMode(A8, INPUT);
  R_Servo.attach(2); //Pin 2
  L_Servo.attach(3); //Pin 3

  Serial.begin(9600); // create port
  while (!Serial);    // wait until serial window is opened
  testSetup();
  Serial.println("stopped test");
 // spinRobot();
  delay(3000);
}


//*************************************************************************
//    Main Loop
//*************************************************************************
void loop() {
  Serial.println("inside main loop");
  readLightSensors();
while (dist < 3000){
  while (abs(direc) < 20){
    Serial.println("IN THE LOOP!!");
    Go();
    readLightSensors();
  }
}

  stopRobot();

  //test things before we're ready
  //while (true);     //pause code forever

  //get values for light sensors
  // readLightSensors();

  //if robot is not lined up towards light
  //spinRobot();

  //if robot is close to light
  //stopRobot();
}


//*************************************************************************
//    readLightSensors
//*************************************************************************
void readLightSensors() {
  //read and print values from both light sensors

  LeftSensor = analogRead(A8);
  RightSensor = analogRead(A9);
  dist = LeftSensor + RightSensor;  // associated with distance to light
  direc = LeftSensor - RightSensor; // associated with direction to light
  Serial.println("L = " + (String)LeftSensor + " | " + (String)RightSensor + " = R");
  //Serial.println(" ");
  //Serial.println("Right Sensor = " + (String)RightSensor);
  // Serial.println(" ");

  // check if sensors are facing towards the light
  // if (abs(direc) < 20)
  //{
  // Serial.println("I'm zero!!!");
  // Serial.println(" ");
  //  delay(200);
  //}
  // Serial.println("*****************************************************");
}

//*************************************************************************
//    testSetup
//*************************************************************************
void testSetup() {
  // test the servo motors
  R_Servo.writeMicroseconds(1700); // 1000-2000, 1500 should be stop
  L_Servo.writeMicroseconds(1700); // 1000-2000, 1500 should be stop
  delay(2000);
  R_Servo.writeMicroseconds(1500); // 1000-2000, 1500 should be stop
  L_Servo.writeMicroseconds(1500); // 1000-2000, 1500 should be stop
}

//*************************************************************************
//    spinRobot
//*************************************************************************
void spinRobot() {
  R_Servo.writeMicroseconds(1500); // 1000-2000, 1500 should be stop
  L_Servo.writeMicroseconds(1500); // 1000-2000, 1500 should be stop

  // for initial spin
  readLightSensors();
  while (abs(direc) > 10) {
    Serial.println("inside spin function");
    readLightSensors();
    R_Servo.writeMicroseconds(1450); // right wheel going forwards
    L_Servo.writeMicroseconds(1550); // left wheel going backwards
  }

  stopRobot();
}


//*************************************************************************
//    stopRobot
//*************************************************************************
void stopRobot() {
  //stop
  R_Servo.writeMicroseconds(1500); // 1000-2000, 1500 should be stop
  L_Servo.writeMicroseconds(1500); // 1000-2000, 1500 should be stop
  //set wheels to zero
}

//*************************************************************************
//    forwardRobot
//*************************************************************************
void forwardRobot() {
  // go slow
  R_Servo.writeMicroseconds(1450); // 1000-2000, 1500 should be stop
  L_Servo.writeMicroseconds(1450); // 1000-2000, 1500 should be stop
  delay(200);
}

//*************************************************************************
//    getVoltage
//************************************************************************
int getVoltage(int sped, int dir, int side) {
  // randomness from trevor
  int retSpeed = 30*sped;
  int returnable;
  if (side == 1) 
     returnable = 1500 - (retSpeed + 30 * dir);
  if (side == 0)
    returnable = 1500 + (retSpeed - 30*dir);
  if (returnable > 2000)
    returnable = 2000;
  if (returnable < 1000)
    returnable = 1000;
  return returnable;
}

//*************************************************************************
//    Go
//************************************************************************
void Go() {
  dir = direc/5;
  R_Servo.writeMicroseconds(getVoltage(3, dir, 1)); // 1000-2000, 1500 should be stop
  L_Servo.writeMicroseconds(getVoltage(3, dir, 0)); // 1000-2000, 1500 should be stop
  delay(200);
}
